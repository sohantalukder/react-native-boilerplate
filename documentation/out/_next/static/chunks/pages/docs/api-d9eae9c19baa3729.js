(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[259],{9823:function(e,n,r){(window.__NEXT_P=window.__NEXT_P||[]).push(["/docs/api",function(){return r(5)}])},2761:function(e,n,r){"use strict";r.d(n,{Z:function(){return t}});let t=(0,r(3759).Z)("ArrowLeft",[["path",{d:"m12 19-7-7 7-7",key:"1l729n"}],["path",{d:"M19 12H5",key:"x3x0zl"}]])},9354:function(e,n,r){"use strict";r.d(n,{Z:function(){return t}});let t=(0,r(3759).Z)("Database",[["ellipse",{cx:"12",cy:"5",rx:"9",ry:"3",key:"msslwz"}],["path",{d:"M3 5V19A9 3 0 0 0 21 19V5",key:"1wlel7"}],["path",{d:"M3 12A9 3 0 0 0 21 12",key:"mv7ke4"}]])},2020:function(e,n,r){"use strict";r.d(n,{Z:function(){return t}});let t=(0,r(3759).Z)("Globe",[["circle",{cx:"12",cy:"12",r:"10",key:"1mglay"}],["path",{d:"M12 2a14.5 14.5 0 0 0 0 20 14.5 14.5 0 0 0 0-20",key:"13o1zl"}],["path",{d:"M2 12h20",key:"9i4pu4"}]])},5851:function(e,n,r){"use strict";r.d(n,{H:function(){return i}});var t=r(5893),s=r(9008),a=r.n(s);let o={title:"React Native Boilerplate - Professional Template",description:"A production-ready React Native boilerplate with TypeScript, Navigation, State Management, and modern development tools. Build mobile apps faster with best practices.",image:"https://sohantalukder.github.io/react-native-boilerplate/og-image.png",url:"https://sohantalukder.github.io/react-native-boilerplate",keywords:["React Native","TypeScript","Mobile App","Boilerplate","Template","Navigation","State Management","iOS","Android"]};function i(e){let{title:n,description:r,image:s,url:i,type:l="website",publishedTime:c,modifiedTime:d,author:u,keywords:p}=e,m={title:n?"".concat(n," | React Native Boilerplate"):o.title,description:r||o.description,image:s||o.image,url:i||o.url,keywords:p||o.keywords};return(0,t.jsxs)(a(),{children:[(0,t.jsx)("title",{children:m.title}),(0,t.jsx)("meta",{name:"description",content:m.description}),(0,t.jsx)("meta",{name:"keywords",content:m.keywords.join(", ")}),(0,t.jsx)("meta",{name:"author",content:u||"Sohan Talukder"}),(0,t.jsx)("meta",{name:"viewport",content:"width=device-width, initial-scale=1"}),(0,t.jsx)("meta",{name:"robots",content:"index, follow"}),(0,t.jsx)("meta",{name:"language",content:"English"}),(0,t.jsx)("meta",{name:"revisit-after",content:"7 days"}),(0,t.jsx)("link",{rel:"canonical",href:m.url}),(0,t.jsx)("meta",{property:"og:type",content:l}),(0,t.jsx)("meta",{property:"og:title",content:m.title}),(0,t.jsx)("meta",{property:"og:description",content:m.description}),(0,t.jsx)("meta",{property:"og:image",content:m.image}),(0,t.jsx)("meta",{property:"og:url",content:m.url}),(0,t.jsx)("meta",{property:"og:site_name",content:"React Native Boilerplate"}),(0,t.jsx)("meta",{property:"og:locale",content:"en_US"}),"article"===l&&c&&(0,t.jsx)("meta",{property:"article:published_time",content:c}),"article"===l&&d&&(0,t.jsx)("meta",{property:"article:modified_time",content:d}),"article"===l&&u&&(0,t.jsx)("meta",{property:"article:author",content:u}),(0,t.jsx)("meta",{name:"twitter:card",content:"summary_large_image"}),(0,t.jsx)("meta",{name:"twitter:title",content:m.title}),(0,t.jsx)("meta",{name:"twitter:description",content:m.description}),(0,t.jsx)("meta",{name:"twitter:image",content:m.image}),(0,t.jsx)("meta",{name:"twitter:creator",content:"@sohantalukder"}),(0,t.jsx)("meta",{name:"twitter:site",content:"@sohantalukder"}),(0,t.jsx)("meta",{name:"theme-color",content:"#3b82f6"}),(0,t.jsx)("meta",{name:"msapplication-TileColor",content:"#3b82f6"}),(0,t.jsx)("meta",{name:"apple-mobile-web-app-capable",content:"yes"}),(0,t.jsx)("meta",{name:"apple-mobile-web-app-status-bar-style",content:"default"}),(0,t.jsx)("meta",{name:"apple-mobile-web-app-title",content:"RN Boilerplate"}),(0,t.jsx)("link",{rel:"icon",type:"image/svg+xml",href:"/favicon.svg"}),(0,t.jsx)("link",{rel:"icon",type:"image/x-icon",href:"/favicon.ico"}),(0,t.jsx)("link",{rel:"manifest",href:"/manifest.json"}),(0,t.jsx)("script",{type:"application/ld+json",dangerouslySetInnerHTML:{__html:JSON.stringify({"@context":"https://schema.org","@type":"SoftwareApplication",name:"React Native Boilerplate",description:m.description,url:m.url,image:m.image,author:{"@type":"Person",name:"Sohan Talukder",email:"mdtalukder.sohan@gmail.com"},applicationCategory:"DeveloperApplication",operatingSystem:"iOS, Android",programmingLanguage:"TypeScript, JavaScript",keywords:m.keywords.join(", "),offers:{"@type":"Offer",price:"0",priceCurrency:"USD"}})}})]})}},9346:function(e,n,r){"use strict";r.d(n,{Ol:function(){return i},SZ:function(){return c},Zb:function(){return o},aY:function(){return d},ll:function(){return l}});var t=r(5893),s=r(7294),a=r(4777);let o=s.forwardRef((e,n)=>{let{className:r,...s}=e;return(0,t.jsx)("div",{ref:n,className:(0,a.cn)("rounded-lg border bg-card text-card-foreground shadow-sm",r),...s})});o.displayName="Card";let i=s.forwardRef((e,n)=>{let{className:r,...s}=e;return(0,t.jsx)("div",{ref:n,className:(0,a.cn)("flex flex-col space-y-1.5 p-6",r),...s})});i.displayName="CardHeader";let l=s.forwardRef((e,n)=>{let{className:r,...s}=e;return(0,t.jsx)("h3",{ref:n,className:(0,a.cn)("text-2xl font-semibold leading-none tracking-tight",r),...s})});l.displayName="CardTitle";let c=s.forwardRef((e,n)=>{let{className:r,...s}=e;return(0,t.jsx)("p",{ref:n,className:(0,a.cn)("text-sm text-muted-foreground",r),...s})});c.displayName="CardDescription";let d=s.forwardRef((e,n)=>{let{className:r,...s}=e;return(0,t.jsx)("div",{ref:n,className:(0,a.cn)("p-6 pt-0",r),...s})});d.displayName="CardContent"},4777:function(e,n,r){"use strict";r.d(n,{cn:function(){return a}});var t=r(512),s=r(8388);function a(){for(var e=arguments.length,n=Array(e),r=0;r<e;r++)n[r]=arguments[r];return(0,s.m6)((0,t.W)(n))}},5:function(e,n,r){"use strict";r.r(n),r.d(n,{default:function(){return h}});var t=r(5893),s=r(9346),a=r(5851),o=r(1664),i=r.n(o),l=r(2761),c=r(2020),d=r(9354),u=r(3759);let p=(0,u.Z)("Key",[["circle",{cx:"7.5",cy:"15.5",r:"5.5",key:"yqb3hr"}],["path",{d:"m21 2-9.6 9.6",key:"1j0ho8"}],["path",{d:"m15.5 7.5 3 3L22 7l-3-3",key:"1rn1fs"}]]),m=(0,u.Z)("AlertCircle",[["circle",{cx:"12",cy:"12",r:"10",key:"1mglay"}],["line",{x1:"12",x2:"12",y1:"8",y2:"12",key:"1pkeuh"}],["line",{x1:"12",x2:"12.01",y1:"16",y2:"16",key:"4dfq90"}]]);function h(){return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(a.H,{title:"API Integration Guide",description:"Learn how to integrate APIs, handle authentication, manage data fetching, and implement error handling in your React Native Boilerplate app."}),(0,t.jsxs)("div",{className:"min-h-screen bg-background",children:[(0,t.jsx)("div",{className:"border-b bg-background/95 backdrop-blur supports-[backdrop-filter]:bg-background/60 sticky top-0 z-50",children:(0,t.jsx)("div",{className:"container mx-auto px-4 py-4",children:(0,t.jsxs)("div",{className:"flex items-center space-x-4",children:[(0,t.jsx)(i(),{href:"/docs",className:"text-muted-foreground hover:text-foreground transition-colors",children:(0,t.jsx)(l.Z,{className:"h-5 w-5"})}),(0,t.jsxs)("div",{children:[(0,t.jsx)("h1",{className:"text-2xl font-bold",children:"API Integration"}),(0,t.jsx)("p",{className:"text-muted-foreground",children:"Complete guide to API integration and data management"})]})]})})}),(0,t.jsx)("div",{className:"container mx-auto px-4 py-8",children:(0,t.jsxs)("div",{className:"max-w-4xl mx-auto space-y-8",children:[(0,t.jsxs)(s.Zb,{children:[(0,t.jsxs)(s.Ol,{children:[(0,t.jsxs)(s.ll,{className:"flex items-center",children:[(0,t.jsx)(c.Z,{className:"mr-2 h-6 w-6"}),"API Integration Overview"]}),(0,t.jsx)(s.SZ,{children:"The React Native Boilerplate provides a robust API integration setup with Axios, TanStack Query, authentication handling, and comprehensive error management."})]}),(0,t.jsx)(s.aY,{children:(0,t.jsxs)("div",{className:"grid md:grid-cols-2 lg:grid-cols-3 gap-4",children:[(0,t.jsxs)("div",{className:"p-4 bg-blue-50 dark:bg-blue-950/20 rounded-lg border border-blue-200 dark:border-blue-800",children:[(0,t.jsx)(c.Z,{className:"h-8 w-8 text-blue-600 dark:text-blue-400 mb-2"}),(0,t.jsx)("h4",{className:"font-semibold text-blue-800 dark:text-blue-200",children:"HTTP Client"}),(0,t.jsx)("p",{className:"text-sm text-blue-700 dark:text-blue-300",children:"Axios with interceptors"})]}),(0,t.jsxs)("div",{className:"p-4 bg-green-50 dark:bg-green-950/20 rounded-lg border border-green-200 dark:border-green-800",children:[(0,t.jsx)(d.Z,{className:"h-8 w-8 text-green-600 dark:text-green-400 mb-2"}),(0,t.jsx)("h4",{className:"font-semibold text-green-800 dark:text-green-200",children:"Data Fetching"}),(0,t.jsx)("p",{className:"text-sm text-green-700 dark:text-green-300",children:"TanStack Query for caching"})]}),(0,t.jsxs)("div",{className:"p-4 bg-purple-50 dark:bg-purple-950/20 rounded-lg border border-purple-200 dark:border-purple-800",children:[(0,t.jsx)(p,{className:"h-8 w-8 text-purple-600 dark:text-purple-400 mb-2"}),(0,t.jsx)("h4",{className:"font-semibold text-purple-800 dark:text-purple-200",children:"Authentication"}),(0,t.jsx)("p",{className:"text-sm text-purple-700 dark:text-purple-300",children:"Token-based auth"})]})]})})]}),(0,t.jsxs)(s.Zb,{children:[(0,t.jsxs)(s.Ol,{children:[(0,t.jsx)(s.ll,{children:"HTTP Client Configuration"}),(0,t.jsx)(s.SZ,{children:"Setting up Axios with interceptors and base configuration"})]}),(0,t.jsx)(s.aY,{children:(0,t.jsxs)("div",{className:"space-y-6",children:[(0,t.jsxs)("div",{children:[(0,t.jsx)("h4",{className:"font-semibold mb-3",children:"Base Axios Configuration"}),(0,t.jsx)("pre",{className:"text-sm bg-muted p-4 rounded-lg overflow-x-auto",children:"// services/api/client.ts\nimport axios, { AxiosInstance, AxiosRequestConfig, AxiosResponse } from 'axios'\nimport { config } from '@/config'\nimport { storage } from '@/services/storage'\n\n// Create axios instance\nconst apiClient: AxiosInstance = axios.create({\n  baseURL: config.API_BASE_URL,\n  timeout: 30000,\n  headers: {\n    'Content-Type': 'application/json',\n    'Accept': 'application/json',\n  },\n})\n\n// Request interceptor for auth token\napiClient.interceptors.request.use(\n  async (config: AxiosRequestConfig) => {\n    const token = await storage.getToken()\n    \n    if (token) {\n      config.headers = {\n        ...config.headers,\n        Authorization: `Bearer ${token}`,\n      }\n    }\n    \n    return config\n  },\n  (error) => {\n    return Promise.reject(error)\n  }\n)\n\n// Response interceptor for error handling\napiClient.interceptors.response.use(\n  (response: AxiosResponse) => {\n    return response\n  },\n  async (error) => {\n    const originalRequest = error.config\n    \n    // Handle 401 Unauthorized\n    if (error.response?.status === 401 && !originalRequest._retry) {\n      originalRequest._retry = true\n      \n      try {\n        const refreshToken = await storage.getRefreshToken()\n        if (refreshToken) {\n          const response = await refreshAuthToken(refreshToken)\n          await storage.setToken(response.data.accessToken)\n          \n          // Retry original request\n          return apiClient(originalRequest)\n        }\n      } catch (refreshError) {\n        // Refresh failed, redirect to login\n        await storage.clearTokens()\n        // Navigate to login screen\n      }\n    }\n    \n    return Promise.reject(error)\n  }\n)\n\nexport { apiClient }"})]}),(0,t.jsxs)("div",{children:[(0,t.jsx)("h4",{className:"font-semibold mb-3",children:"API Configuration"}),(0,t.jsx)("pre",{className:"text-sm bg-muted p-4 rounded-lg overflow-x-auto",children:"// config/api.ts\nexport const config = {\n  API_BASE_URL: process.env.EXPO_PUBLIC_API_BASE_URL || 'https://api.example.com',\n  API_TIMEOUT: 30000,\n  \n  // API Endpoints\n  endpoints: {\n    auth: {\n      login: '/auth/login',\n      register: '/auth/register',\n      refresh: '/auth/refresh',\n      logout: '/auth/logout',\n    },\n    user: {\n      profile: '/user/profile',\n      update: '/user/profile',\n    },\n    posts: {\n      list: '/posts',\n      create: '/posts',\n      detail: (id: string) => `/posts/${id}`,\n      update: (id: string) => `/posts/${id}`,\n      delete: (id: string) => `/posts/${id}`,\n    },\n  },\n}"})]})]})})]}),(0,t.jsxs)(s.Zb,{children:[(0,t.jsxs)(s.Ol,{children:[(0,t.jsx)(s.ll,{children:"API Service Layer"}),(0,t.jsx)(s.SZ,{children:"Organizing API calls into reusable service functions"})]}),(0,t.jsx)(s.aY,{children:(0,t.jsxs)("div",{className:"space-y-6",children:[(0,t.jsxs)("div",{children:[(0,t.jsx)("h4",{className:"font-semibold mb-3",children:"Authentication Service"}),(0,t.jsx)("pre",{className:"text-sm bg-muted p-4 rounded-lg overflow-x-auto",children:"// services/api/authService.ts\nimport { apiClient } from './client'\nimport { config } from '@/config'\n\nexport interface LoginRequest {\n  email: string\n  password: string\n}\n\nexport interface AuthResponse {\n  user: User\n  accessToken: string\n  refreshToken: string\n}\n\nexport const authService = {\n  login: async (credentials: LoginRequest): Promise<AuthResponse> => {\n    const response = await apiClient.post(config.endpoints.auth.login, credentials)\n    return response.data\n  },\n\n  register: async (userData: RegisterRequest): Promise<AuthResponse> => {\n    const response = await apiClient.post(config.endpoints.auth.register, userData)\n    return response.data\n  },\n\n  refreshToken: async (refreshToken: string): Promise<AuthResponse> => {\n    const response = await apiClient.post(config.endpoints.auth.refresh, {\n      refreshToken,\n    })\n    return response.data\n  },\n\n  logout: async (): Promise<void> => {\n    await apiClient.post(config.endpoints.auth.logout)\n  },\n}"})]}),(0,t.jsxs)("div",{children:[(0,t.jsx)("h4",{className:"font-semibold mb-3",children:"User Service"}),(0,t.jsx)("pre",{className:"text-sm bg-muted p-4 rounded-lg overflow-x-auto",children:"// services/api/userService.ts\nimport { apiClient } from './client'\nimport { config } from '@/config'\n\nexport interface User {\n  id: string\n  name: string\n  email: string\n  avatar?: string\n  createdAt: string\n}\n\nexport interface UpdateUserRequest {\n  name?: string\n  avatar?: string\n}\n\nexport const userService = {\n  getProfile: async (): Promise<User> => {\n    const response = await apiClient.get(config.endpoints.user.profile)\n    return response.data\n  },\n\n  updateProfile: async (updates: UpdateUserRequest): Promise<User> => {\n    const response = await apiClient.put(config.endpoints.user.update, updates)\n    return response.data\n  },\n\n  uploadAvatar: async (file: FormData): Promise<{ url: string }> => {\n    const response = await apiClient.post('/user/avatar', file, {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n      },\n    })\n    return response.data\n  },\n}"})]}),(0,t.jsxs)("div",{children:[(0,t.jsx)("h4",{className:"font-semibold mb-3",children:"Generic API Service"}),(0,t.jsx)("pre",{className:"text-sm bg-muted p-4 rounded-lg overflow-x-auto",children:"// services/api/baseService.ts\nimport { apiClient } from './client'\n\nexport class BaseApiService<T> {\n  constructor(private endpoint: string) {}\n\n  async getAll(params?: Record<string, any>): Promise<T[]> {\n    const response = await apiClient.get(this.endpoint, { params })\n    return response.data\n  }\n\n  async getById(id: string): Promise<T> {\n    const response = await apiClient.get(`${this.endpoint}/${id}`)\n    return response.data\n  }\n\n  async create(data: Partial<T>): Promise<T> {\n    const response = await apiClient.post(this.endpoint, data)\n    return response.data\n  }\n\n  async update(id: string, data: Partial<T>): Promise<T> {\n    const response = await apiClient.put(`${this.endpoint}/${id}`, data)\n    return response.data\n  }\n\n  async delete(id: string): Promise<void> {\n    await apiClient.delete(`${this.endpoint}/${id}`)\n  }\n}\n\n// Usage example\nexport const postsService = new BaseApiService<Post>('/posts')"})]})]})})]}),(0,t.jsxs)(s.Zb,{children:[(0,t.jsxs)(s.Ol,{children:[(0,t.jsxs)(s.ll,{className:"flex items-center",children:[(0,t.jsx)(d.Z,{className:"mr-2 h-6 w-6"}),"TanStack Query Integration"]}),(0,t.jsx)(s.SZ,{children:"Using TanStack Query for efficient data fetching and caching"})]}),(0,t.jsx)(s.aY,{children:(0,t.jsxs)("div",{className:"space-y-6",children:[(0,t.jsxs)("div",{children:[(0,t.jsx)("h4",{className:"font-semibold mb-3",children:"Query Client Setup"}),(0,t.jsx)("pre",{className:"text-sm bg-muted p-4 rounded-lg overflow-x-auto",children:"// providers/QueryProvider.tsx\nimport React from 'react'\nimport { QueryClient, QueryClientProvider } from '@tanstack/react-query'\nimport { ReactQueryDevtools } from '@tanstack/react-query-devtools'\n\nconst queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      staleTime: 5 * 60 * 1000, // 5 minutes\n      cacheTime: 10 * 60 * 1000, // 10 minutes\n      retry: 2,\n      refetchOnWindowFocus: false,\n    },\n    mutations: {\n      retry: 1,\n    },\n  },\n})\n\nexport const QueryProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\n  return (\n    <QueryClientProvider client={queryClient}>\n      {children}\n      {__DEV__ && <ReactQueryDevtools initialIsOpen={false} />}\n    </QueryClientProvider>\n  )\n}"})]}),(0,t.jsxs)("div",{children:[(0,t.jsx)("h4",{className:"font-semibold mb-3",children:"Custom Query Hooks"}),(0,t.jsx)("pre",{className:"text-sm bg-muted p-4 rounded-lg overflow-x-auto",children:"// hooks/queries/useAuth.ts\nimport { useQuery, useMutation, useQueryClient } from '@tanstack/react-query'\nimport { authService } from '@/services/api'\n\nexport const useUserProfile = () => {\n  return useQuery({\n    queryKey: ['user', 'profile'],\n    queryFn: userService.getProfile,\n    enabled: !!storage.getToken(), // Only fetch if authenticated\n  })\n}\n\nexport const useUpdateProfile = () => {\n  const queryClient = useQueryClient()\n\n  return useMutation({\n    mutationFn: userService.updateProfile,\n    onSuccess: (updatedUser) => {\n      // Update cache\n      queryClient.setQueryData(['user', 'profile'], updatedUser)\n      \n      // Show success message\n      showToast('Profile updated successfully', 'success')\n    },\n    onError: (error) => {\n      showToast('Failed to update profile', 'error')\n    },\n  })\n}\n\n// Posts queries\nexport const usePosts = (params?: PostsParams) => {\n  return useQuery({\n    queryKey: ['posts', params],\n    queryFn: () => postsService.getAll(params),\n    keepPreviousData: true, // For pagination\n  })\n}\n\nexport const usePost = (id: string) => {\n  return useQuery({\n    queryKey: ['posts', id],\n    queryFn: () => postsService.getById(id),\n    enabled: !!id,\n  })\n}\n\nexport const useCreatePost = () => {\n  const queryClient = useQueryClient()\n\n  return useMutation({\n    mutationFn: postsService.create,\n    onSuccess: () => {\n      // Invalidate and refetch posts list\n      queryClient.invalidateQueries(['posts'])\n    },\n  })\n}"})]}),(0,t.jsxs)("div",{children:[(0,t.jsx)("h4",{className:"font-semibold mb-3",children:"Optimistic Updates"}),(0,t.jsx)("pre",{className:"text-sm bg-muted p-4 rounded-lg overflow-x-auto",children:"// hooks/queries/useOptimisticPost.ts\nexport const useUpdatePost = () => {\n  const queryClient = useQueryClient()\n\n  return useMutation({\n    mutationFn: ({ id, data }: { id: string; data: Partial<Post> }) =>\n      postsService.update(id, data),\n    \n    // Optimistic update\n    onMutate: async ({ id, data }) => {\n      // Cancel outgoing refetches\n      await queryClient.cancelQueries(['posts', id])\n\n      // Snapshot the previous value\n      const previousPost = queryClient.getQueryData(['posts', id])\n\n      // Optimistically update to the new value\n      queryClient.setQueryData(['posts', id], (old: Post) => ({\n        ...old,\n        ...data,\n      }))\n\n      // Return context with snapshot\n      return { previousPost, id }\n    },\n\n    // If mutation fails, rollback\n    onError: (err, variables, context) => {\n      if (context?.previousPost) {\n        queryClient.setQueryData(['posts', context.id], context.previousPost)\n      }\n    },\n\n    // Always refetch after error or success\n    onSettled: (data, error, variables) => {\n      queryClient.invalidateQueries(['posts', variables.id])\n    },\n  })\n}"})]})]})})]}),(0,t.jsxs)(s.Zb,{children:[(0,t.jsxs)(s.Ol,{children:[(0,t.jsxs)(s.ll,{className:"flex items-center",children:[(0,t.jsx)(m,{className:"mr-2 h-6 w-6"}),"Error Handling"]}),(0,t.jsx)(s.SZ,{children:"Comprehensive error handling strategies for API calls"})]}),(0,t.jsx)(s.aY,{children:(0,t.jsxs)("div",{className:"space-y-6",children:[(0,t.jsxs)("div",{children:[(0,t.jsx)("h4",{className:"font-semibold mb-3",children:"Error Types & Handling"}),(0,t.jsx)("pre",{className:"text-sm bg-muted p-4 rounded-lg overflow-x-auto",children:"// types/api.ts\nexport interface ApiError {\n  message: string\n  status: number\n  code?: string\n  details?: Record<string, any>\n}\n\nexport class NetworkError extends Error {\n  constructor(message: string) {\n    super(message)\n    this.name = 'NetworkError'\n  }\n}\n\nexport class ValidationError extends Error {\n  constructor(message: string, public fields: Record<string, string[]>) {\n    super(message)\n    this.name = 'ValidationError'\n  }\n}\n\n// utils/errorHandler.ts\nexport const handleApiError = (error: any): ApiError => {\n  if (error.response) {\n    // Server responded with error status\n    const { status, data } = error.response\n    \n    return {\n      message: data.message || 'An error occurred',\n      status,\n      code: data.code,\n      details: data.details,\n    }\n  } else if (error.request) {\n    // Network error\n    throw new NetworkError('Network connection failed')\n  } else {\n    // Other error\n    throw new Error(error.message || 'An unexpected error occurred')\n  }\n}"})]}),(0,t.jsxs)("div",{children:[(0,t.jsx)("h4",{className:"font-semibold mb-3",children:"Error Boundary for API Errors"}),(0,t.jsx)("pre",{className:"text-sm bg-muted p-4 rounded-lg overflow-x-auto",children:"// components/ErrorBoundary.tsx\nimport React from 'react'\nimport { View, Text, TouchableOpacity } from 'react-native'\n\ninterface ErrorBoundaryState {\n  hasError: boolean\n  error?: Error\n}\n\nexport class ApiErrorBoundary extends React.Component<\n  React.PropsWithChildren<{}>,\n  ErrorBoundaryState\n> {\n  constructor(props: React.PropsWithChildren<{}>) {\n    super(props)\n    this.state = { hasError: false }\n  }\n\n  static getDerivedStateFromError(error: Error): ErrorBoundaryState {\n    return { hasError: true, error }\n  }\n\n  componentDidCatch(error: Error, errorInfo: React.ErrorInfo) {\n    console.error('API Error Boundary caught an error:', error, errorInfo)\n    \n    // Log to crash reporting service\n    crashlytics().recordError(error)\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return (\n        <View style={styles.errorContainer}>\n          <Text style={styles.errorTitle}>Oops! Something went wrong</Text>\n          <Text style={styles.errorMessage}>\n            {this.state.error?.message || 'An unexpected error occurred'}\n          </Text>\n          <TouchableOpacity\n            style={styles.retryButton}\n            onPress={() => this.setState({ hasError: false })}\n          >\n            <Text style={styles.retryButtonText}>Try Again</Text>\n          </TouchableOpacity>\n        </View>\n      )\n    }\n\n    return this.props.children\n  }\n}"})]}),(0,t.jsxs)("div",{children:[(0,t.jsx)("h4",{className:"font-semibold mb-3",children:"Global Error Handler Hook"}),(0,t.jsx)("pre",{className:"text-sm bg-muted p-4 rounded-lg overflow-x-auto",children:"// hooks/useErrorHandler.ts\nimport { useCallback } from 'react'\nimport { Alert } from 'react-native'\nimport { useNavigation } from '@react-navigation/native'\n\nexport const useErrorHandler = () => {\n  const navigation = useNavigation()\n\n  const handleError = useCallback((error: any) => {\n    const apiError = handleApiError(error)\n\n    switch (apiError.status) {\n      case 401:\n        // Unauthorized - redirect to login\n        Alert.alert(\n          'Session Expired',\n          'Please log in again to continue.',\n          [\n            {\n              text: 'OK',\n              onPress: () => navigation.navigate('Login'),\n            },\n          ]\n        )\n        break\n\n      case 403:\n        // Forbidden\n        Alert.alert('Access Denied', 'You do not have permission to perform this action.')\n        break\n\n      case 422:\n        // Validation errors\n        if (apiError.details) {\n          const fieldErrors = Object.entries(apiError.details)\n            .map(([field, errors]) => `${field}: ${errors.join(', ')}`)\n            .join('\\n')\n          \n          Alert.alert('Validation Error', fieldErrors)\n        }\n        break\n\n      case 500:\n        // Server error\n        Alert.alert('Server Error', 'Something went wrong on our end. Please try again later.')\n        break\n\n      default:\n        // Generic error\n        Alert.alert('Error', apiError.message)\n    }\n  }, [navigation])\n\n  return { handleError }\n}"})]})]})})]}),(0,t.jsxs)(s.Zb,{children:[(0,t.jsxs)(s.Ol,{children:[(0,t.jsxs)(s.ll,{className:"flex items-center",children:[(0,t.jsx)(p,{className:"mr-2 h-6 w-6"}),"Authentication Flow"]}),(0,t.jsx)(s.SZ,{children:"Implementing secure authentication with token management"})]}),(0,t.jsx)(s.aY,{children:(0,t.jsxs)("div",{className:"space-y-6",children:[(0,t.jsxs)("div",{children:[(0,t.jsx)("h4",{className:"font-semibold mb-3",children:"Authentication Hook"}),(0,t.jsx)("pre",{className:"text-sm bg-muted p-4 rounded-lg overflow-x-auto",children:"// hooks/useAuth.ts\nimport { useState, useEffect } from 'react'\nimport { storage } from '@/services/storage'\nimport { authService } from '@/services/api'\n\nexport const useAuth = () => {\n  const [user, setUser] = useState<User | null>(null)\n  const [isLoading, setIsLoading] = useState(true)\n  const [isAuthenticated, setIsAuthenticated] = useState(false)\n\n  useEffect(() => {\n    checkAuthStatus()\n  }, [])\n\n  const checkAuthStatus = async () => {\n    try {\n      const token = await storage.getToken()\n      if (token) {\n        const userProfile = await userService.getProfile()\n        setUser(userProfile)\n        setIsAuthenticated(true)\n      }\n    } catch (error) {\n      // Token invalid, clear storage\n      await storage.clearTokens()\n    } finally {\n      setIsLoading(false)\n    }\n  }\n\n  const login = async (email: string, password: string) => {\n    try {\n      const response = await authService.login({ email, password })\n      \n      // Store tokens\n      await storage.setToken(response.accessToken)\n      await storage.setRefreshToken(response.refreshToken)\n      \n      // Update state\n      setUser(response.user)\n      setIsAuthenticated(true)\n      \n      return response\n    } catch (error) {\n      throw error\n    }\n  }\n\n  const logout = async () => {\n    try {\n      await authService.logout()\n    } catch (error) {\n      // Continue with logout even if server call fails\n      console.warn('Logout API call failed:', error)\n    } finally {\n      // Clear local storage and state\n      await storage.clearTokens()\n      setUser(null)\n      setIsAuthenticated(false)\n    }\n  }\n\n  return {\n    user,\n    isLoading,\n    isAuthenticated,\n    login,\n    logout,\n  }\n}"})]}),(0,t.jsxs)("div",{children:[(0,t.jsx)("h4",{className:"font-semibold mb-3",children:"Token Storage Service"}),(0,t.jsx)("pre",{className:"text-sm bg-muted p-4 rounded-lg overflow-x-auto",children:"// services/storage/tokenStorage.ts\nimport { MMKV } from 'react-native-mmkv'\n\nconst storage = new MMKV({\n  id: 'auth-storage',\n  encryptionKey: 'auth-encryption-key',\n})\n\nexport const tokenStorage = {\n  setToken: (token: string) => {\n    storage.set('accessToken', token)\n  },\n\n  getToken: (): string | undefined => {\n    return storage.getString('accessToken')\n  },\n\n  setRefreshToken: (token: string) => {\n    storage.set('refreshToken', token)\n  },\n\n  getRefreshToken: (): string | undefined => {\n    return storage.getString('refreshToken')\n  },\n\n  clearTokens: () => {\n    storage.delete('accessToken')\n    storage.delete('refreshToken')\n  },\n\n  hasValidToken: (): boolean => {\n    const token = storage.getString('accessToken')\n    if (!token) return false\n\n    // Check if token is expired\n    try {\n      const payload = JSON.parse(atob(token.split('.')[1]))\n      const currentTime = Date.now() / 1000\n      return payload.exp > currentTime\n    } catch {\n      return false\n    }\n  },\n}"})]})]})})]}),(0,t.jsxs)(s.Zb,{children:[(0,t.jsxs)(s.Ol,{children:[(0,t.jsx)(s.ll,{children:"API Best Practices"}),(0,t.jsx)(s.SZ,{children:"Guidelines for efficient and maintainable API integration"})]}),(0,t.jsx)(s.aY,{children:(0,t.jsxs)("div",{className:"space-y-4",children:[(0,t.jsxs)("div",{className:"grid gap-4",children:[(0,t.jsxs)("div",{className:"p-4 bg-green-50 dark:bg-green-950/20 rounded-lg border border-green-200 dark:border-green-800",children:[(0,t.jsx)("h5",{className:"font-medium text-green-800 dark:text-green-200 mb-2",children:"✅ Do"}),(0,t.jsxs)("ul",{className:"space-y-1 text-sm text-green-700 dark:text-green-300",children:[(0,t.jsx)("li",{children:"• Use TypeScript interfaces for API responses"}),(0,t.jsx)("li",{children:"• Implement proper error handling and user feedback"}),(0,t.jsx)("li",{children:"• Cache data appropriately with TanStack Query"}),(0,t.jsx)("li",{children:"• Use optimistic updates for better UX"}),(0,t.jsx)("li",{children:"• Implement request/response interceptors"}),(0,t.jsx)("li",{children:"• Handle authentication token refresh automatically"}),(0,t.jsx)("li",{children:"• Use environment variables for API configuration"})]})]}),(0,t.jsxs)("div",{className:"p-4 bg-red-50 dark:bg-red-950/20 rounded-lg border border-red-200 dark:border-red-800",children:[(0,t.jsx)("h5",{className:"font-medium text-red-800 dark:text-red-200 mb-2",children:"❌ Don't"}),(0,t.jsxs)("ul",{className:"space-y-1 text-sm text-red-700 dark:text-red-300",children:[(0,t.jsx)("li",{children:"• Store sensitive data in unencrypted storage"}),(0,t.jsx)("li",{children:"• Make API calls directly in components"}),(0,t.jsx)("li",{children:"• Ignore network errors or timeout handling"}),(0,t.jsx)("li",{children:"• Hard-code API endpoints"}),(0,t.jsx)("li",{children:"• Skip request validation"}),(0,t.jsx)("li",{children:"• Forget to handle loading states"}),(0,t.jsx)("li",{children:"• Use synchronous storage operations"})]})]})]}),(0,t.jsxs)("div",{children:[(0,t.jsx)("h4",{className:"font-semibold mb-3",children:"Performance Tips"}),(0,t.jsxs)("div",{className:"grid md:grid-cols-2 gap-4",children:[(0,t.jsxs)("div",{className:"p-3 bg-blue-50 dark:bg-blue-950/20 rounded border border-blue-200 dark:border-blue-800",children:[(0,t.jsx)("strong",{className:"text-blue-800 dark:text-blue-200",children:"Pagination:"}),(0,t.jsx)("span",{className:"text-blue-700 dark:text-blue-300 ml-2",children:"Use infinite queries for large datasets"})]}),(0,t.jsxs)("div",{className:"p-3 bg-green-50 dark:bg-green-950/20 rounded border border-green-200 dark:border-green-800",children:[(0,t.jsx)("strong",{className:"text-green-800 dark:text-green-200",children:"Debouncing:"}),(0,t.jsx)("span",{className:"text-green-700 dark:text-green-300 ml-2",children:"Debounce search API calls"})]}),(0,t.jsxs)("div",{className:"p-3 bg-purple-50 dark:bg-purple-950/20 rounded border border-purple-200 dark:border-purple-800",children:[(0,t.jsx)("strong",{className:"text-purple-800 dark:text-purple-200",children:"Background Sync:"}),(0,t.jsx)("span",{className:"text-purple-700 dark:text-purple-300 ml-2",children:"Sync data when app becomes active"})]}),(0,t.jsxs)("div",{className:"p-3 bg-orange-50 dark:bg-orange-950/20 rounded border border-orange-200 dark:border-orange-800",children:[(0,t.jsx)("strong",{className:"text-orange-800 dark:text-orange-200",children:"Request Deduplication:"}),(0,t.jsx)("span",{className:"text-orange-700 dark:text-orange-300 ml-2",children:"Prevent duplicate API calls"})]})]})]})]})})]}),(0,t.jsxs)(s.Zb,{children:[(0,t.jsx)(s.Ol,{children:(0,t.jsx)(s.ll,{children:"Next Steps"})}),(0,t.jsx)(s.aY,{children:(0,t.jsxs)("div",{className:"grid md:grid-cols-2 gap-4",children:[(0,t.jsxs)(i(),{href:"/docs/configuration",className:"p-4 border rounded-lg hover:bg-muted/50 transition-colors",children:[(0,t.jsx)("h4",{className:"font-semibold mb-2",children:"Configuration"}),(0,t.jsx)("p",{className:"text-sm text-muted-foreground",children:"Learn about environment setup and configuration"})]}),(0,t.jsxs)(i(),{href:"/docs/best-practices",className:"p-4 border rounded-lg hover:bg-muted/50 transition-colors",children:[(0,t.jsx)("h4",{className:"font-semibold mb-2",children:"Best Practices"}),(0,t.jsx)("p",{className:"text-sm text-muted-foreground",children:"Development guidelines and code standards"})]})]})})]})]})})]})]})}}},function(e){e.O(0,[741,888,774,179],function(){return e(e.s=9823)}),_N_E=e.O()}]);