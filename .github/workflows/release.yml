name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., 1.0.1)'
        required: true
        type: string

permissions:
  contents: write
  pull-requests: write

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: npm ci

      - name: Get version
        id: get_version
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "VERSION=${{ github.event.inputs.version }}" >> $GITHUB_OUTPUT
            echo "TAG_NAME=v${{ github.event.inputs.version }}" >> $GITHUB_OUTPUT
          else
            echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
            echo "TAG_NAME=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
          fi

      - name: Generate release notes
        id: release_notes
        run: |
          echo "Generating release notes for version ${{ steps.get_version.outputs.VERSION }}"
          node scripts/generate-release-notes.js generate > release_notes.txt
          echo "RELEASE_NOTES<<EOF" >> $GITHUB_OUTPUT
          cat release_notes.txt >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.get_version.outputs.TAG_NAME }}
          release_name: Release ${{ steps.get_version.outputs.TAG_NAME }}
          body: ${{ steps.release_notes.outputs.RELEASE_NOTES }}
          draft: false
          prerelease: ${{ contains(steps.get_version.outputs.VERSION, 'alpha') || contains(steps.get_version.outputs.VERSION, 'beta') || contains(steps.get_version.outputs.VERSION, 'rc') }}

      - name: Publish to NPM
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Update changelog on main branch
        if: github.event_name == 'workflow_dispatch'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git checkout main
          node scripts/generate-release-notes.js update-changelog ${{ steps.get_version.outputs.VERSION }}
          git add CHANGELOG.md
          git commit -m "chore: update changelog for v${{ steps.get_version.outputs.VERSION }}" || exit 0
          git push origin main

  notify:
    needs: release
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Notify success
        if: needs.release.result == 'success'
        run: |
          echo "‚úÖ Release ${{ needs.release.outputs.VERSION }} completed successfully!"
          echo "üöÄ Published to NPM: https://www.npmjs.com/package/@sohantalukder/react-native-boilerplate"
          echo "üì¶ GitHub Release: https://github.com/sohantalukder/react-native-boilerplate/releases/latest"

      - name: Notify failure
        if: needs.release.result == 'failure'
        run: |
          echo "‚ùå Release process failed!"
          echo "Please check the workflow logs for details." 